---
description: 
globs: 
alwaysApply: undefined
---
---
description: Hinweisdatei für Dokumentationsregeln
globs: 
alwaysApply: false
---
# WICHTIGER HINWEIS

## Diese Datei (mdfiles.mdc) ist nur eine Referenz!

**NICHT DIREKT IN DIESE DATEI SCHREIBEN!**

Diese Datei dient lediglich als Hinweis, welche Dokumentationsdateien zu beachten sind. Alle Inhalte müssen in den entsprechenden Dokumentationsdateien gepflegt werden.

## Zu beachtende Dokumentationen:
- [repo_str](mdc:repo_str) - Übersicht der Repository-Struktur
- [README.md](mdc:README.md) - Allgemeine Projektinformationen und Übersicht
- [PROJECT_SETUP.md](mdc:PROJECT_SETUP.md) - Anweisungen zur Projekt-Einrichtung
- [DB_SCHEMA.md](mdc:DB_SCHEMA.md) - Datenbankschema und Struktur
- [BACKEND_SETUP.md](mdc:BACKEND_SETUP.md) - Setup und Konfiguration des Backends
- [FRONTEND_SETUP.md](mdc:FRONTEND_SETUP.md) - Setup und Konfiguration des Frontends
- [API_INTEGRATION.md](mdc:API_INTEGRATION.md) - Best Practices für API-Integration
- [ROLE_SWITCH.md](mdc:ROLE_SWITCH.md) - Funktionalität zum Wechseln der Benutzerrollen
- [CHANGELOG.md](mdc:CHANGELOG.md) - Änderungshistorie des Projekts
- [CEREBRO_WIKI.md](mdc:CEREBRO_WIKI.md) - Spezifikation und Implementierungsplan für das Cerebro Wiki-System

## Wichtig: Änderungen dokumentieren!
Bei allen Änderungen am Code muss die entsprechende Dokumentation aktualisiert und in die CHANGELOG.md eingetragen werden.

## Entwicklungsregeln

### Server und Prisma Studio
⚠️ **WICHTIG**: Der Server und Prisma Studio dürfen NICHT selbständig neu gestartet werden! Bei Änderungen an Servercode oder Schema muss der Benutzer um Neustart gebeten werden.

### Zeitverarbeitung und Zeitzonen
⚠️ **KRITISCH**: Bei der Verarbeitung von Datum und Zeit gelten folgende strikte Regeln:

1. **Immer lokale Systemzeit verwenden**:
   - Arbeitszeiten werden IMMER in lokaler Systemzeit gespeichert und verarbeitet
   - NIEMALS Zeitzonenumrechnungen durchführen
   - KEINE UTC-Zeit verwenden oder in UTC umrechnen

2. **Korrekte Datumsformate**:
   - ISO-Strings OHNE 'Z' am Ende verwenden: `YYYY-MM-DDTHH:mm:ss.SSS` (lokale Zeit)
   - NIEMALS das 'Z'-Suffix verwenden, da dies UTC-Zeit erzwingt

3. **Vermeidung von Zeitzonenproblemen**:
   - Bei Date-Objekten Vorsicht walten lassen, da JavaScript automatisch Zeitzonenumrechnungen durchführt
   - Date-Objekte nur dort verwenden, wo unbedingt nötig, ansonsten String-Operationen bevorzugen

Diese Regeln sind ABSOLUT zu befolgen, um Probleme mit Zeitzonenberechnungen zu vermeiden.

### Import-Pfade Regeln 

### Standard-UI-Elemente für Tabellen

Für alle Tabellen im System gelten folgende Standards:

#### Tabellenformatierung
- Tabellenrahmen: `border-0 rounded-lg overflow-hidden shadow-sm`
- Zeilenabstände: `divide-y divide-gray-200`
- Header-Hintergrund: `bg-gray-50`
- Zellen-Padding: `px-6 py-4`

#### Button-Darstellung
- Standard-Button-Klassen: `inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500`
- Hauptaktionsbuttons (z.B. Speichern): `inline-flex items-center px-3 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500`
- Aktion-Icons (Löschen, Bearbeiten, etc.): `p-1 bg-[color]-600 text-white rounded hover:bg-[color]-700`
- Alle Buttons sollten sowohl ein Icon als auch Text haben (außer bei sehr kleinen Aktionsbuttons)

#### Spaltenüberschriften und Sortierung
- Spaltenheader: `px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider cursor-pointer group relative`
- Sortierungs-Icons: ArrowsUpDownIcon (h-3 w-3) für verschiebbare Spalten, "↑" oder "↓" für aktive Sortierung
- Drag & Drop für Spalten ermöglichen

#### Filterbereich
- Filterbereich-Container: `bg-gray-50 p-4 rounded-md mb-4 border border-gray-200`
- Filter-Eingabefelder: `mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm`

#### Beispielimplementierungen
- Tabellen in `Requests.tsx` und in der Task-Liste in `WorkTracker.tsx` dienen als Referenzimplementierungen
- Die Funktion `renderSortableHeader` in diesen Komponenten zeigt die korrekte Implementierung von sortierbaren Spaltenüberschriften

Diese Richtlinien gelten für alle Tabellenkomponenten im Projekt und müssen konsequent eingehalten werden. 